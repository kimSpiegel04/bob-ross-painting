{"version":3,"sources":["paintings/victor-mtn-1.jpeg","paintings/kim-mtn-1.jpeg","components/Card.js","components/CardList.js","components/SearchArtist.js","components/ErrorBoundary.js","paintings.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","id","img","title","artist","date","trigger","className","alt","src","width","height","modal","CardList","paintings","map","paint","i","key","SearchArtist","searchfield","searchChange","onClick","value","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","victorMtn1","kimMtn1","App","onSearchChange","e","target","onArtistChange","painter","filteredArtist","filter","toLowerCase","includes","filteredPaintings","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ecbb6f34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/victor-mtn-1.ba9b9a4d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kim-mtn-1.1ff15b00.jpeg\";","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\n// The Card will render the painting, artist, date, etc. \r\nconst Card = ({ id, img, title, artist, date }) => {\r\n    return (\r\n        <Popup trigger={        \r\n            <div className='tc dib br3 pa3 ma2 grow bw2 shadow-5 card button'>\r\n                <img alt={`${title} by ${artist}`} src={img} width=\"270\" height=\"200\" id={id} />\r\n                <h2>{title}</h2>\r\n                <p>{`${artist}, ${date}`}</p>\r\n            </div>\r\n        } modal>\r\n            <div className='content'>\r\n                <div className='tc'>\r\n                    {\" \"}\r\n                    <img alt={`${title} by ${artist}`} src={img} width=\"400\" height=\"300\" id={id} />\r\n                    <h2>{title}</h2>\r\n                    <p>{`${artist}, ${date}`}</p>\r\n                </div>\r\n            </div>\r\n        </Popup >\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n//The CardList gathers the props\r\nconst CardList = ({paintings}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                paintings.map((paint, i)=>{\r\n                    return (\r\n                        <Card\r\n                            key={i}\r\n                            artist={paintings[i].artist}\r\n                            img={paintings[i].img}\r\n                            title={paintings[i].title}\r\n                            date={paintings[i].date}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchArtist = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <button \r\n                className='pa3 br3 br--left dim buttonA'\r\n                onClick={searchChange}\r\n                value='Victor Prato'\r\n            >\r\n                Victor\r\n            </button>\r\n            <button \r\n                className='pa3 bl dim buttonA'\r\n                onClick={searchChange}\r\n                value='Kimberly Spiegel'\r\n            >\r\n                Kim\r\n            </button>\r\n            <button \r\n                className='pa3 br3 br--right dim buttonA'\r\n                onClick={searchChange}\r\n                value=''\r\n            >\r\n                Reset\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchArtist;","import React, { Component } from 'react';\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundary;","import victorMtn1 from './paintings/victor-mtn-1.jpeg';\r\nimport kimMtn1 from './paintings/kim-mtn-1.jpeg';\r\n\r\n//data of paintings, title of painting, etc.\r\nexport const paintings = [\r\n    {\r\n        id: 1,\r\n        img: victorMtn1,\r\n        title: 'Mountains',\r\n        artist: 'Victor Prato',\r\n        date: 'January 11th, 2020'\r\n    },\r\n    {\r\n        id: 2,\r\n        img: kimMtn1,\r\n        title: 'Mountains',\r\n        artist: 'Kimberly Spiegel',\r\n        date: 'January 11th, 2020'\r\n    }\r\n]","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import SearchTitle from '../components/SearchTitle';\r\nimport SearchArtist from '../components/SearchArtist';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport { paintings } from '../paintings';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            paintings:paintings,\r\n            searchfield: '',\r\n            painter: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange=(e)=>{\r\n        this.setState({ searchfield: e.target.value });\r\n    }\r\n\r\n    onArtistChange=(e)=>{\r\n        this.setState({ painter: e.target.value });\r\n    }\r\n\r\n    render(){\r\n\r\n        const filteredArtist=this.state.paintings.filter(paintings=>{\r\n            return paintings.artist.toLowerCase().includes(this.state.painter.toLowerCase());\r\n        })\r\n\r\n        const filteredPaintings=this.state.paintings.filter(paintings=>{\r\n            return paintings.title.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        console.log(filteredPaintings);\r\n        return (\r\n            <div className='tc'>\r\n                {/* Header */}\r\n                <h1 className='title'>Victor and Kim's Happy Little Paintings</h1>\r\n                {/* Search box */}\r\n                {/* <SearchTitle searchChange={this.onSearchChange}/> */}\r\n                {/* CardList renders the Card of paintings */}\r\n                <SearchArtist searchChange={this.onArtistChange}/>\r\n                <ErrorBoundary>\r\n                    <CardList paintings={ filteredArtist } />\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n                <App />\n, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}